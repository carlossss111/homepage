{"properties": [
  {
    "name": "weather.refresh_cron",
    "type": "java.lang.String",
    "description": "Cron format for how often to query the weather API"
  },
  {
    "name": "weather.api_key",
    "type": "java.lang.String",
    "description": "API Key to query the weather API, should be provided as an environment variable"
  },
  {
    "name": "weather.units",
    "type": "java.lang.String",
    "description": "Wether to ask for metric or imperial measurements <'metric'|'imperial'>"
  },
  {
    "name": "weather.longitude",
    "type": "java.lang.Double",
    "description": "Longitude of weather center"
  },
  {
    "name": "weather.latitude",
    "type": "java.lang.Double",
    "description": "Latitude of weather center"
  },
  {
    "name": "weather.base_url",
    "type": "java.lang.String",
    "description": "Baseurl of the weather API"
  },
  {
    "name": "weather.http_timeout_s",
    "type": "java.lang.Integer",
    "description": "Timeout for HTTP request in seconds"
  },
  {
    "name": "weather.highWindspeed",
    "type": "java.lang.Integer",
    "description": "Windspeed /10 that we consider high"
  },
  {
    "name": "weather.highHumidity",
    "type": "java.lang.Integer",
    "description": "Humidity % that we consider high"
  },
  {
    "name": "weather.veryHighTemp",
    "type": "java.lang.Integer",
    "description": "Temperature 'C that we consider blisteringly hot in this country"
  },
  {
    "name": "weather.highTemp",
    "type": "java.lang.Integer",
    "description": "Temperature 'C that we consider uncomfortable"
  },
  {
    "name": "weather.freezingTemp",
    "type": "java.lang.Integer",
    "description": "Temperate 'C at below which water freezes (dunno why this is configurable)"
  }
]}